{"version":3,"file":"static/js/387.bb71c61c.chunk.js","mappings":"6NAEaA,E,MAAMC,GAAAA,IAAH,yC,kBCoChB,EAjCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUN,GAASO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACzBJ,EAASI,EACV,GACF,GAAE,CAACR,IAECG,EAIL,OACE,wBACGA,EAAMM,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAChC,OACE,2BACJ,SAACd,EAAD,CACEe,IACEF,EAAY,0CAAsCA,GAAiB,+EAErEG,IAAI,MAEN,uBAAIJ,KACJ,uCAAeE,OARFF,EAWZ,KAGN,C,sBCrCD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOjB,KAAKY,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,uJC7BMC,EAAU,mCACVC,EAAW,+BAEFC,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,oGACyBC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,IADzE,cACQI,EADR,gBAEiBA,EAASC,OAF1B,0GAIA,IAAMC,EAAe,CAAEJ,oBANvB,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAKf,IAEaK,EAAW,6BAAG,WAAMC,GAAN,uFACFL,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2BQ,IAF9B,cACnBJ,EADmB,gBAIZA,EAASC,OAJG,mFAAH,sDAOXI,EAAU,6BAAG,WAAM9C,GAAN,uFACDwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,oBAAyCqC,IAD7C,cAClBI,EADkB,gBAEXA,EAASC,OAFE,mFAAH,sDAKVpC,EAAS,6BAAG,WAAMN,GAAN,uFACAwC,MAAM,GAAD,OACvBF,EADuB,kBACLtC,EADK,4BACsBqC,IAF3B,cACjBI,EADiB,gBAIVA,EAASC,OAJC,mFAAH,sDAOTK,EAAY,6BAAG,WAAM/C,GAAN,uFACHwC,MAAM,GAAD,OACvBF,EADuB,kBACLtC,EADK,4BACsBqC,IAFxB,cACpBI,EADoB,gBAIbA,EAASC,OAJI,mFAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  width: 100px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Img } from './Cast.styled';\nimport { castMovie } from 'components/api/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    castMovie(movieId).then(({ cast }) => {\n      setMovie(cast);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <ul>\n      {movie.map(({ name, profile_path, character }) => {\n        return (\n          <li key={name}>\n      <Img\n        src={\n          profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n        }\n        alt=\"\"\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '963fd2e4c19fe891a746da17d3ea5ed3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchTrendingMovies() {\n  const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return await response.json();\n  }\nconst apiDayMovies = { fetchTrendingMovies };\nexport default apiDayMovies;\n\nexport const searchMovie = async search => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}`\n  );\n  return await response.json();\n};\n   \nexport const fetchMovie = async movieId => {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await response.json();\n};\n\nexport const castMovie = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return await response.json();\n};\n\nexport const reviewsMovie = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return await response.json();\n};\n\n\n\n\n\n"],"names":["Img","styled","movieId","useParams","useState","movie","setMovie","useEffect","castMovie","then","cast","map","name","profile_path","character","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","apiDayMovies","searchMovie","search","fetchMovie","reviewsMovie"],"sourceRoot":""}